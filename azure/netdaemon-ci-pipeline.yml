# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

#trigger:
#- master
#- dev

#pr:
#  branches:
#    include:
#    - '*'  # must quote since "*" is a YAML reserved character; we want a string

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    displayName: 'Use .net core 3.1'
    inputs:
      version: '3.1.x'

  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Run tests'
    inputs:
      command: test
      projects: '**/*.Tests/*.csproj'
      arguments: -c $(BuildConfiguration) -v minimal --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true

  - task: DotNetCoreCLI@2
    displayName: Install ReportGenerator Global Tool
    inputs:
      command: custom
      custom: tool
      arguments: install dotnet-reportgenerator-globaltool -g

  - script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura;Badges"
    displayName: Create reports

  - task: CopyFiles@2
    displayName: 'Copy Badges'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/coverlet/reports'
      contents: '*.svg'
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Badges artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml
